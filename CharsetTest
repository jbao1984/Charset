import java.io.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CodingErrorAction;

public class CharsetTest {
    final protected static char[] hexArray = "0123456789ABCDEF".toCharArray();

    public static void sampleDecodingErroAction(String hex, CodingErrorAction actionOnMalformedInput, CodingErrorAction actionOnUnmappableCharacter){
        ByteBuffer buff = ByteBuffer.allocate(hex.length()/2);
        for (int i = 0; i < hex.length(); i+=2) {
            buff.put((byte)Integer.parseInt(hex.substring(i, i+2), 16));
        }
        buff.rewind();
        Charset cs = Charset.forName("shift-jis");
        CharBuffer cb = null;
        try {
            cb = cs.newDecoder()
                    .onMalformedInput(actionOnMalformedInput)
                    .onUnmappableCharacter(actionOnUnmappableCharacter)
                    .decode(buff);
            System.out.println(cb.toString());
        }catch(Exception e){
            //e.printStackTrace();
            System.out.println("error");
        }
    }

    public static void sampleEncodingErroAction(String hex, String encode, CodingErrorAction actionOnMalformedInput, CodingErrorAction actionOnUnmappableCharacter){
        CharBuffer charBuffer = CharBuffer.wrap(hex);
        Charset cs = Charset.forName(encode);
        ByteBuffer bb = null;
        try {
            bb = cs.newEncoder()
                    .onMalformedInput(actionOnMalformedInput)
                    .onUnmappableCharacter(actionOnUnmappableCharacter)
                    .encode(charBuffer);
        }catch(Exception e){
            //e.printStackTrace();
            System.out.println("error");
        }

        byte[] bytes = bb.array();
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        System.out.println(new String(hexChars));
    }

    public static void main(String args[]) {
        String hex1 = "93FA967B8CEA";                   // valid shift-jis characters.
        String hex2 = "93FA967B8C00EA";                   // invalid shift-jis charcters

        System.out.print("Valid Shift-JIS ");
        sampleDecodingErroAction(hex1, CodingErrorAction.IGNORE, CodingErrorAction.IGNORE);

        System.out.print("Invalid Shift-JIS(Ignore) ");
        sampleDecodingErroAction(hex2, CodingErrorAction.IGNORE, CodingErrorAction.IGNORE);
        System.out.print("Invalid Shift-JIS(Replace) ");
        sampleDecodingErroAction(hex2, CodingErrorAction.REPLACE, CodingErrorAction.REPLACE);
        System.out.print("Invalid Shift-JIS(Report) ");
        sampleDecodingErroAction(hex2, CodingErrorAction.REPORT, CodingErrorAction.REPORT);

        String french = "Å’lœné";
        System.out.println("French " + french);
        System.out.print("Output in UTF-8 ");
        sampleEncodingErroAction(french, "UTF-8", CodingErrorAction.IGNORE, CodingErrorAction.IGNORE);
        System.out.print("Output in ISO-8859-1 ");
        sampleEncodingErroAction(french, "ISO-8859-1", CodingErrorAction.REPLACE, CodingErrorAction.REPLACE);
        System.out.print("Output in Windows-1252 ");
        sampleEncodingErroAction(french, "Windows-1252", CodingErrorAction.REPLACE, CodingErrorAction.REPLACE);
    }

}
